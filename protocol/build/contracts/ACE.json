{
  "contractName": "ACE",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "noteRegistries",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3f7e0f8f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x69f7fa1f"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "balancedProofs",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9a6aa4e0"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "_validatorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_isBalanced",
          "type": "bool"
        }
      ],
      "name": "LogSetProof",
      "type": "event",
      "signature": "0xd40cf1ca4d423849d345777d40c93297652998c20de84f223942bbf2cbcba75b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_commonReferenceString",
          "type": "bytes32[6]"
        }
      ],
      "name": "LogSetCommonReferenceString",
      "type": "event",
      "signature": "0x7c0947ed607ee0a9cb1d0e2afd6f75d59aa00a3c05d0103a2f79b6bf1b5e6e55"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "validateProof",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc35b8526"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "name": "clearProofByHashes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb387e59b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "name": "_proofHash",
          "type": "bytes32"
        },
        {
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "validateProofByHash",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xfa7ff56c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_canMint",
          "type": "bool"
        },
        {
          "name": "_canBurn",
          "type": "bool"
        },
        {
          "name": "_canConvert",
          "type": "bool"
        },
        {
          "name": "_scalingFactor",
          "type": "uint256"
        },
        {
          "name": "_linkedToken",
          "type": "address"
        }
      ],
      "name": "createNoteRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xe557c7a7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofOutput",
          "type": "bytes"
        },
        {
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "name": "_proofSender",
          "type": "address"
        }
      ],
      "name": "updateNoteRegistry",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa975f524"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_commonReferenceString",
          "type": "bytes32[6]"
        }
      ],
      "name": "setCommonReferenceString",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x56a0d477"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        },
        {
          "name": "_validatorAddress",
          "type": "address"
        },
        {
          "name": "_isBalanced",
          "type": "bool"
        }
      ],
      "name": "setProof",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x9465be5d"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        }
      ],
      "name": "getValidatorAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x856ec6c6"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_proofType",
          "type": "uint16"
        }
      ],
      "name": "getIsProofBalanced",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4d964e48"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCommonReferenceString",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[6]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd695b72"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "367:12651:0:-;;;2651:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2682:5:0;:18;;-1:-1:-1;;;;;;2682:18:0;2690:10;2682:18;;;367:12651;;;;;;",
  "deployedSourceMap": "367:12651:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:12651:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2356:54:0;-1:-1:-1;;;;;2356:54:0;;:::i;:::-;;;;-1:-1:-1;;;;;2356:54:0;;;;;;;;;;;;;;12492:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12492:124:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;11140:305;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11140:305:0;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;11140:305:0;;-1:-1:-1;11140:305:0;;-1:-1:-1;;;;11140:305:0:i;:::-;;889:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;889:44:0;;;;:::i;12279:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12279:124:0;;;;:::i;768:20::-;;;:::i;11812:378::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11812:378:0;;;;;-1:-1:-1;;;;;11812:378:0;;;;;;;;;;;;:::i;2250:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2250:45:0;;;;:::i;10490:435::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10490:435:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10490:435:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10490:435:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10490:435:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10490:435:0;;-1:-1:-1;;;10490:435:0;;;;;-1:-1:-1;;10490:435:0;;;-1:-1:-1;;;;;10490:435:0;;:::i;7842:887::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7842:887:0;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7842:887:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7842:887:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;7842:887:0;;-1:-1:-1;7842:887:0;-1:-1:-1;7842:887:0;:::i;3608:3378::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3608:3378:0;;;;;-1:-1:-1;;;;;3608:3378:0;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3608:3378:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3608:3378:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3608:3378:0;;-1:-1:-1;3608:3378:0;-1:-1:-1;3608:3378:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3608:3378:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12895:121;;;:::i;:::-;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12895:121:0;;;;;;;;;;;;;;;;9856:628;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;9856:628:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9856:628:0;;:::i;9309:541::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9309:541:0;;;;;;;;;;;;;-1:-1:-1;;;;;9309:541:0;;:::i;2356:54::-;;;;;;;;;;;;-1:-1:-1;;;;;2356:54:0;;:::o;12492:124::-;12583:26;;12560:4;12583:26;;;:14;:26;;;;;;;;;12492:124::o;11140:305::-;11255:5;;-1:-1:-1;;;;;11255:5:0;11241:10;:19;11233:83;;;;-1:-1:-1;;;;;11233:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:46;:21;11350:22;11326:46;;:::i;:::-;;11387:51;11415:22;11387:51;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11387:51:0;;;;;;;;;;;;;;;;11140:305;:::o;889:44::-;;;;;;;;;;;;-1:-1:-1;;;;;889:44:0;;:::o;12279:124::-;12374:22;;12348:7;12374:22;;;:10;:22;;;;;;-1:-1:-1;;;;;12374:22:0;;12279:124::o;768:20::-;;;-1:-1:-1;;;;;768:20:0;;:::o;11812:378::-;11963:5;;-1:-1:-1;;;;;11963:5:0;11949:10;:19;11941:70;;;;-1:-1:-1;;;;;11941:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12021:22;;;;;;;:10;:22;;;;;;;;:42;;-1:-1:-1;;12021:42:0;-1:-1:-1;;;;;12021:42:0;;;;;;;;12073:14;:26;;;;;;:40;;-1:-1:-1;;12073:40:0;;;;;;;;;;12128:55;;;;;;;;;;;;;;;;;;;;;;;;;;;11812:378;;;:::o;2250:45::-;;;;;;;;;;;;;;;:::o;10490:435::-;10689:10;10634:4;10674:26;;;:14;:26;;;;;;-1:-1:-1;;;;;10674:26:0;10718:27;;;10710:83;;;;-1:-1:-1;;;;;10710:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10811:67;;;;;;;;;;;;-1:-1:-1;;;;;10811:67:0;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;10839:12;;10853:10;;10865:12;;10811:67;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10811:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10811:67:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10811:67:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10811:67:0;10803:94;;;;;;;-1:-1:-1;;;;;10803:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10914:4:0;;10490:435;-1:-1:-1;;;;10490:435:0:o;7842:887::-;7971:4;7965:11;8031:4;8018:18;8012:4;8008:29;8077:11;8064:25;8128:10;8121:4;8113:6;8109:17;8102:37;8178:6;8171:4;8163:6;8159:17;8152:33;8211:20;8205:4;8198:34;8260:1;8245:468;8270:6;8267:1;8264:13;8245:468;;;8384:4;8376;8373:1;8369:12;8356:11;8352:30;8348:41;8335:55;8421:9;8414:17;8453:1;8448:103;;;;8407:144;;8448:103;8490:3;8484:4;8477:17;8528:4;8522;8515:18;8407:144;-1:-1:-1;8568:25:0;;8641:4;8623:23;;-1:-1:-1;8610:37:0;;;-1:-1:-1;8671:21:0;;8664:35;8292:4;8285:12;8245:468;;;8249:14;7937:786;;;;;;:::o;3608:3378::-;3879:22;;;3852:24;3879:22;;;:10;:22;;;;;;3740:12;;-1:-1:-1;;;;;3879:22:0;3919:30;;;3911:76;;;;-1:-1:-1;;;;;3911:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:4;4034:11;4247:5;4080:4;4228:17;;;4221:32;;;;4352:4;4340:17;;4333:34;;;-1:-1:-1;4406:33:0;4099:4;4387:17;;;4380:60;;;;4489:4;4479:44;4472:4;4460:17;;4453:71;4573:4;4563:44;4556:4;4544:17;;4537:71;4657:4;4647:44;4640:4;4628:17;;4621:71;4731:44;;4724:4;4712:17;;4705:71;4825:4;4815:44;4808:4;4796:17;;4789:71;4086:18;4076:29;4922:24;;4948:4;4918:35;4076:29;4898:5;4886:18;;4873:81;5159:4;5153;5145:5;5132:10;5119:24;5115:36;5107:6;5089:16;5084:3;5073:91;5066:99;5063:2;;;5197:3;5191:4;5184:17;5215:4;5209;5202:18;5063:2;5311:14;5305:4;5297:6;5282:44;5387:6;5444;5438:13;5430:6;5426:26;5549:14;5542:4;5534:6;5530:17;5526:38;5516:48;;5695:10;5689:4;5682:24;5720:19;5714:4;5707:33;5782:4;5776;5766:21;5760:28;5842:1;5837:1050;;;;5753:1134;;5837:1050;5994:4;5980:12;5976:23;5970:30;6032:1;6017:856;6042:15;6039:1;6036:22;6017:856;;;6241:4;6238:1;6234:12;6227:4;6213:12;6209:23;6205:42;6199:49;6185:12;6181:68;6318:4;6312:3;6306:10;6302:21;6297:3;6287:37;6584:9;6576:6;6569:25;6641:10;6634:4;6626:6;6622:17;6615:37;6699:6;6692:4;6684:6;6680:17;6673:33;6758:4;6750:6;6740:23;6734:4;6727:37;6778:20;6772:4;6765:34;6850:4;6843;6837;6827:21;6820:35;6081:792;;6073:4;6070:1;6066:12;6061:17;;6017:856;;;6021:14;5844:1043;5753:1134;;6920:14;6907:11;6900:35;12895:121;12952:17;;:::i;:::-;12981:28;;;;;;;;;;;-1:-1:-1;;12981:28:0;;-1:-1:-1;12981:28:0;;;;;;;;;;;;;;;;;;;;;;;;12895:121;;:::o;9856:628::-;10082:10;10040:7;10067:26;;;:14;:26;;;;;;-1:-1:-1;;;;;10067:26:0;:45;10059:100;;;;-1:-1:-1;;;;;10059:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10169:21;10223:8;10245;10267:11;10292:14;10320:12;10354:4;10381;10193:203;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10193:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10193:203:0;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;10421:10:0;10406:26;;;;:14;:26;;;;;:37;;-1:-1:-1;;10406:37:0;-1:-1:-1;;;;;10406:37:0;;;;;;9856:628;-1:-1:-1;;;;;;;9856:628:0:o;9309:541::-;9447:4;9506;9500:11;9539:10;9531:6;9524:26;9589:10;9582:4;9574:6;9570:17;9563:37;9639:7;9632:4;9624:6;9620:17;9613:34;9691:4;9683:6;9673:23;9667:4;9660:37;9723:20;9717:4;9710:34;9794:4;9788;9778:21;9772:28;9764:6;9757:44;9829:4;9821:6;9814:20;367:12651;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;367:12651:0;;;-1:-1:-1;367:12651:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;367:12651:0;;;-1:-1:-1;;367:12651:0:o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./NoteRegistry.sol\";\nimport \"../utils/NoteUtils.sol\";\n\n/**\n * @title The AZTEC Cryptography Engine\n * @author AZTEC\n * @dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\n * digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.\n **/\ncontract ACE {\n    // the commonReferenceString contains one G1 group element and one G2 group element,\n    // that are created via the AZTEC protocol's trusted setup. All zero-knowledge proofs supported\n    // by ACE use the same common reference string.\n    bytes32[6] private commonReferenceString;\n\n    // TODO: add a consensus mechanism! This contract is for testing purposes only until then\n    address public owner;\n\n    // `validators` contains the validator smart contracts that validate specific proof types\n    mapping(uint16 => address) public validators;\n\n    // `balancedProofs` identifies whether a proof type satisfies a balancing relationship.\n    // Proofs are split into two categories - those that prove a balancing relationship and those that don't\n    //      The latter are 'utility' proofs that can be used by developers to add some requirements on top of\n    //      a proof that satisfies a balancing relationship.\n    //      e.g. for a given asset, one might want to only process a join-split transaction if the transaction\n    //      sender can prove that the new note owners do not own > 50% of the total supply of an asset.\n    //\n    //      For the former category, ACE will record that a given proof has satisfied a balancing relationship in\n    //      `validatedProofs`. This proof can then be queried by confidential assets without having to re-validate\n    //      the proof.\n    //      For example, in a bilateral swap proof - a balancing relationship is satisfied for two confidential assets.\n    //      If a DApp validates this proof, it can then send transfer instructions\n    //          to the relevant confidential digital assets.\n    //      These assets can directly query ACE, which will attest to the cryptographic legitimacy of the\n    //          transfer instruction without having to validate another zero-knowledge proof.\n    mapping(uint16 => bool) public balancedProofs;\n    mapping(bytes32 => bool) private validatedProofs;\n\n    mapping(address => NoteRegistry) public noteRegistries;\n\n    event LogSetProof(uint16 _proofType, address _validatorAddress, bool _isBalanced);\n    event LogSetCommonReferenceString(bytes32[6] _commonReferenceString);\n\n    /**\n    * @dev contract constructor. Sets the owner of ACE.\n    **/\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    /**\n    * @dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n    *       linked to `_proofType`. The validator smart contract will have the following interface:\n    *       ```\n    *           function validate(\n    *               bytes _proofData,\n    *               address _sender,\n    *               bytes32[6] _commonReferenceString\n    *           ) public returns (bytes)\n    *       ```\n    * @param _proofType the AZTEC proof type\n    * @param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n    *   an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\n    * Unnamed param is the AZTEC zero-knowledge proof data\n    * @return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard\n    */\n    function validateProof(\n        uint16 _proofType,\n        address _sender,\n        bytes calldata\n    ) external returns (\n        bytes memory\n    ) {\n        // validate that the provided _proofType maps to a corresponding validator\n        address validatorAddress = validators[_proofType];\n        require(validatorAddress != address(0), \"expect validator address to exist\");\n        assembly {\n            let memPtr := mload(0x40)\n            let _proofData := add(0x04, calldataload(0x44)) // calldata location of start of `proofData`\n\n            // manually construct validator calldata map\n            mstore(add(memPtr, 0x04), 0x100) // location in calldata of the start of `bytes _proofData` (0x100)\n            mstore(add(memPtr, 0x24), _sender)\n            mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n            mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n            mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n            calldatacopy(add(memPtr, 0x104), _proofData, add(calldataload(_proofData), 0x20))\n\n            // call our validator smart contract, and validate the call succeeded\n            \n            if iszero(staticcall(gas, validatorAddress, memPtr, add(calldataload(_proofData), 0x124), 0x00, 0x00)) {\n                mstore(0x00, 400) revert(0x00, 0x20) // call failed - proof is invalid!\n            }\n            returndatacopy(memPtr, 0x00, returndatasize) // copy returndata to memory\n            let returnStart := memPtr\n            let proofOutputs := add(memPtr, mload(memPtr)) // proofOutputs points to the start of return data\n            memPtr := add(add(memPtr, 0x20), returndatasize)\n            // does this proof satisfy a balancing relationship? If it does, we need to record the proof\n            mstore(0x00, _proofType) mstore(0x20, balancedProofs_slot)\n            switch sload(keccak256(0x00, 0x40)) // index `balanceProofs[_profType]`\n            case 1 {\n                // we must iterate over each `proofOutput` and record the proof hash\n                let numProofOutputs := mload(add(proofOutputs, 0x20))\n                for { let i := 0 } lt(i, numProofOutputs) { i := add(i, 0x01) } {\n                    // get the location in memory of `proofOutput`\n                    let loc := add(proofOutputs, mload(add(add(proofOutputs, 0x40), mul(i, 0x20))))\n                    let proofHash := keccak256(loc, add(mload(loc), 0x20)) // hash the proof output\n                    // combine the following: proofHash, _proofType, msg.sender\n                    // hashing the above creates a unique key that we can log against this proof, in `validatedProofs`\n                    mstore(memPtr, proofHash)\n                    mstore(add(memPtr, 0x20), _proofType)\n                    mstore(add(memPtr, 0x40), caller)\n                    mstore(0x00, keccak256(memPtr, 0x60)) mstore(0x20, validatedProofs_slot)\n                    sstore(keccak256(0x00, 0x40), 0x01)\n                }\n            }\n            return(returnStart, returndatasize) // return `proofOutputs` to caller\n        }\n    }\n\n    /**\n    * @dev Clear storage variables set when validating zero-knowledge proofs.\n    *      The only address that can clear data from `validatedProofs` is the address that created the proof.\n    *      Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n    *      to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n    *      are only required for the duration of a single transaction.\n    *      E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n    *      two confidential assets.\n    *      This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n    * @param _proofType the AZTEC proof type\n    * Unnamed param is a dynamic array of proof hashes\n    */\n    function clearProofByHashes(uint16 _proofType, bytes32[] calldata) external {\n        assembly {\n            let memPtr := mload(0x40)\n            let proofHashes := add(0x04, calldataload(0x24))\n            let length := calldataload(proofHashes)\n            mstore(add(memPtr, 0x20), _proofType)\n            mstore(add(memPtr, 0x40), caller)\n            mstore(0x20, validatedProofs_slot)\n            for { let i := 0 } lt(i, length) { i := add(i, 0x01) } {\n                let proofHash := calldataload(add(add(proofHashes, mul(i, 0x20)), 0x20))\n                switch iszero(proofHash)\n                case 1 {\n                    mstore(0x00, 400)\n                    revert(0x00, 0x20)\n                }\n                mstore(memPtr, proofHash)\n                mstore(0x00, keccak256(memPtr, 0x60))\n                sstore(keccak256(0x00, 0x40), 0x00)\n            }\n        }\n    }\n\n    /**\n    * @dev Validate a previously validated AZTEC proof via its hash\n    *      This enables confidential assets to receive transfer instructions from a Dapp that\n    *      has already validated an AZTEC proof that satisfies a balancing relationship.\n    * @param _proofType the AZTEC proof type\n    * @param _proofHash the hash of the `proofOutput` received by the asset\n    * @param _sender the Ethereum address of the contract issuing the transfer instruction\n    * @return a boolean that signifies whether the corresponding AZTEC proof has been validated\n    */\n    function validateProofByHash(\n        uint16 _proofType,\n        bytes32 _proofHash,\n        address _sender\n    ) external view returns (bool) {\n        assembly {\n            let memPtr := mload(0x40)\n            mstore(memPtr, _proofHash)\n            mstore(add(memPtr, 0x20), _proofType)\n            mstore(add(memPtr, 0x40), _sender)\n            mstore(0x00, keccak256(memPtr, 0x60))\n            mstore(0x20, validatedProofs_slot)\n            mstore(memPtr, sload(keccak256(0x00, 0x40)))\n            return(memPtr, 0x20)\n        }\n    }\n\n    function createNoteRegistry(\n        bool _canMint,\n        bool _canBurn,\n        bool _canConvert,\n        uint256 _scalingFactor,\n        address _linkedToken\n    ) public returns (address) {\n        require(noteRegistries[msg.sender] == NoteRegistry(0), \"address already has a linked Note Registry\");\n        NoteRegistry registry = new NoteRegistry(\n            _canMint,\n            _canBurn,\n            _canConvert,\n            _scalingFactor,\n            _linkedToken,\n            address(this),\n            address(this)\n        );\n        noteRegistries[msg.sender] = registry;\n        return address(registry);\n    }\n\n    function updateNoteRegistry(\n        bytes memory _proofOutput, \n        uint16 _proofType, \n        address _proofSender\n    ) public returns (bool) {\n        NoteRegistry registry = noteRegistries[msg.sender];\n        require(registry != NoteRegistry(0), \"sender does not have a linked Note Registry\");\n        require(registry.updateNoteRegistry(_proofOutput, _proofType, _proofSender), \"update failed!\");\n        return true;\n    }\n\n    /**\n    * @dev Set the common reference string\n    *      If the trusted setup is re-run, we will need to be able to change the crs\n    * @param _commonReferenceString the new commonReferenceString\n    */\n    function setCommonReferenceString(bytes32[6] memory _commonReferenceString) public {\n        require(msg.sender == owner, \"only the owner can set the common reference string!\");\n        commonReferenceString = _commonReferenceString;\n        emit LogSetCommonReferenceString(_commonReferenceString);\n    }\n\n    /**\n    * @dev Adds or modifies a proofType into the Cryptography Engine.\n    *      This method links a given `_proofType` to a smart contract validator.\n    * @param _proofType the AZTEC proof type\n    * @param _validatorAddress the address of the smart contract validator\n    * @param _isBalanced does this proof satisfy a balancing relationship?\n    */\n    function setProof(\n        uint16 _proofType,\n        address _validatorAddress,\n        bool _isBalanced\n    ) public {\n        require(msg.sender == owner, \"only the owner can set the proof type!\");\n        validators[_proofType] = _validatorAddress;\n        balancedProofs[_proofType] = _isBalanced;\n        emit LogSetProof(_proofType, _validatorAddress, _isBalanced);\n    }\n    \n    /**\n    * @dev Returns the validator address for a given proof type\n    */\n    function getValidatorAddress(uint16 _proofType) public view returns (address) {\n        return validators[_proofType];\n    }\n    \n    /**\n    * @dev Returns the validator address for a given proof type\n    */\n    function getIsProofBalanced(uint16 _proofType) public view returns (bool) {\n        return balancedProofs[_proofType];\n    }\n\n    /**\n    * @dev Returns the common reference string.\n    * we use a custom getter for `commonReferenceString` - the default getter created by making the storage\n    * variable public indexes individual elements of the array, and we want to return the whole array\n    */\n    function getCommonReferenceString() public view returns (bytes32[6] memory) {\n        return commonReferenceString;\n    }\n}\n",
  "sourcePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/ACE/ACE.sol",
  "ast": {
    "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/ACE/ACE.sol",
    "exportedSymbols": {
      "ACE": [
        290
      ]
    },
    "id": 291,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/ACE/NoteRegistry.sol",
        "file": "./NoteRegistry.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 291,
        "sourceUnit": 1069,
        "src": "33:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/utils/NoteUtils.sol",
        "file": "../utils/NoteUtils.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 291,
        "sourceUnit": 2080,
        "src": "62:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1068
        ],
        "contractKind": "contract",
        "documentation": "@title The AZTEC Cryptography Engine\n@author AZTEC\n@dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\ndigital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.*",
        "fullyImplemented": true,
        "id": 290,
        "linearizedBaseContracts": [
          290
        ],
        "name": "ACE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "commonReferenceString",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "627:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$6_storage",
              "typeString": "bytes32[6]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 6,
              "length": {
                "argumentTypes": null,
                "hexValue": "36",
                "id": 5,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "635:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "6"
              },
              "nodeType": "ArrayTypeName",
              "src": "627:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                "typeString": "bytes32[6]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "768:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "768:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "validators",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "889:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
              "typeString": "mapping(uint16 => address)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "897:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "889:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                "typeString": "mapping(uint16 => address)"
              },
              "valueType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "name": "balancedProofs",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2250:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
              "typeString": "mapping(uint16 => bool)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "2258:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "2250:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                "typeString": "mapping(uint16 => bool)"
              },
              "valueType": {
                "id": 15,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2268:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "validatedProofs",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2301:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2309:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2301:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 19,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2320:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "name": "noteRegistries",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2356:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
              "typeString": "mapping(address => contract NoteRegistry)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2364:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2356:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                "typeString": "mapping(address => contract NoteRegistry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "NoteRegistry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1068,
                "src": "2375:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                  "typeString": "contract NoteRegistry"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 33,
            "name": "LogSetProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2435:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2454:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "_isBalanced",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2481:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2434:64:0"
            },
            "src": "2417:82:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 39,
            "name": "LogSetCommonReferenceString",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "2538:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 36,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2546:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2538:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2537:35:0"
            },
            "src": "2504:69:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "2672:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2682:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "2690:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2690:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2682:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:18:0"
                }
              ]
            },
            "documentation": "@dev contract constructor. Sets the owner of ACE.*",
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2672:0:0"
            },
            "scope": 290,
            "src": "2651:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "3759:3227:0",
              "statements": [
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "name": "validatorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "3852:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3852:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 61,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3879:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                        "typeString": "mapping(uint16 => address)"
                      }
                    },
                    "id": 63,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3890:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3879:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3852:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "3919:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3947:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3939:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3939:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3919:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563742076616c696461746f72206164647265737320746f206578697374",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_928065b89917517c3f89f3bc0851c1dbb520965cb3a058be0b3b142afbc3553c",
                          "typeString": "literal_string \"expect validator address to exist\""
                        },
                        "value": "expect validator address to exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_928065b89917517c3f89f3bc0851c1dbb520965cb3a058be0b3b142afbc3553c",
                          "typeString": "literal_string \"expect validator address to exist\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "3911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:76:0"
                },
                {
                  "externalReferences": [
                    {
                      "_proofType": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6641:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4831:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4412:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 52,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4359:7:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofType": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5695:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "balancedProofs_slot": {
                        "declaration": 17,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "5720:19:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 60,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5089:16:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4495:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4747:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4579:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4663:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "6778:20:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 74,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    let _proofData := add(0x04, calldataload(0x44))\n    mstore(add(memPtr, 0x04), 0x100)\n    mstore(add(memPtr, 0x24), _sender)\n    mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n    mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n    mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n    calldatacopy(add(memPtr, 0x104), _proofData, add(calldataload(_proofData), 0x20))\n    if iszero(staticcall(gas(), validatorAddress, memPtr, add(calldataload(_proofData), 0x124), 0x00, 0x00))\n    {\n        mstore(0x00, 400)\n        revert(0x00, 0x20)\n    }\n    returndatacopy(memPtr, 0x00, returndatasize())\n    let returnStart := memPtr\n    let proofOutputs := add(memPtr, mload(memPtr))\n    memPtr := add(add(memPtr, 0x20), returndatasize())\n    mstore(0x00, _proofType)\n    mstore(0x20, balancedProofs_slot)\n    switch sload(keccak256(0x00, 0x40))\n    case 1 {\n        let numProofOutputs := mload(add(proofOutputs, 0x20))\n        for {\n            let i := 0\n        }\n        lt(i, numProofOutputs)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let loc := add(proofOutputs, mload(add(add(proofOutputs, 0x40), mul(i, 0x20))))\n            let proofHash := keccak256(loc, add(mload(loc), 0x20))\n            mstore(memPtr, proofHash)\n            mstore(add(memPtr, 0x20), _proofType)\n            mstore(add(memPtr, 0x40), caller())\n            mstore(0x00, keccak256(memPtr, 0x60))\n            mstore(0x20, validatedProofs_slot)\n            sstore(keccak256(0x00, 0x40), 0x01)\n        }\n    }\n    return(returnStart, returndatasize())\n}",
                  "src": "3997:2989:0"
                }
              ]
            },
            "documentation": "@dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n      linked to `_proofType`. The validator smart contract will have the following interface:\n      ```\n          function validate(\n              bytes _proofData,\n              address _sender,\n              bytes32[6] _commonReferenceString\n          ) public returns (bytes)\n      ```\n@param _proofType the AZTEC proof type\n@param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n  an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard",
            "id": 76,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3640:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3667:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3667:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3692:14:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3630:82:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3740:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3730:28:0"
            },
            "scope": 290,
            "src": "3608:3378:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "7918:811:0",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "_proofType": {
                        "declaration": 78,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8128:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "8211:20:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 84,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    let proofHashes := add(0x04, calldataload(0x24))\n    let length := calldataload(proofHashes)\n    mstore(add(memPtr, 0x20), _proofType)\n    mstore(add(memPtr, 0x40), caller())\n    mstore(0x20, validatedProofs_slot)\n    for {\n        let i := 0\n    }\n    lt(i, length)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let proofHash := calldataload(add(add(proofHashes, mul(i, 0x20)), 0x20))\n        switch iszero(proofHash)\n        case 1 {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(memPtr, proofHash)\n        mstore(0x00, keccak256(memPtr, 0x60))\n        sstore(keccak256(0x00, 0x40), 0x00)\n    }\n}",
                  "src": "7928:801:0"
                }
              ]
            },
            "documentation": "@dev Clear storage variables set when validating zero-knowledge proofs.\n     The only address that can clear data from `validatedProofs` is the address that created the proof.\n     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n     are only required for the duration of a single transaction.\n     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n     two confidential assets.\n     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n@param _proofType the AZTEC proof type\nUnnamed param is a dynamic array of proof hashes",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearProofByHashes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "7870:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7870:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "7889:18:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7889:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 80,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7889:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7869:39:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7918:0:0"
            },
            "scope": 290,
            "src": "7842:887:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "9453:397:0",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "9723:20:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofHash": {
                        "declaration": 90,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9539:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 92,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9639:7:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofType": {
                        "declaration": 88,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9589:10:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 97,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    mstore(memPtr, _proofHash)\n    mstore(add(memPtr, 0x20), _proofType)\n    mstore(add(memPtr, 0x40), _sender)\n    mstore(0x00, keccak256(memPtr, 0x60))\n    mstore(0x20, validatedProofs_slot)\n    mstore(memPtr, sload(keccak256(0x00, 0x40)))\n    return(memPtr, 0x20)\n}",
                  "src": "9463:387:0"
                }
              ]
            },
            "documentation": "@dev Validate a previously validated AZTEC proof via its hash\n     This enables confidential assets to receive transfer instructions from a Dapp that\n     has already validated an AZTEC proof that satisfies a balancing relationship.\n@param _proofType the AZTEC proof type\n@param _proofHash the hash of the `proofOutput` received by the asset\n@param _sender the Ethereum address of the contract issuing the transfer instruction\n@return a boolean that signifies whether the corresponding AZTEC proof has been validated",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProofByHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9347:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "name": "_proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9374:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9402:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9402:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9337:86:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9447:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9447:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9446:6:0"
            },
            "scope": 290,
            "src": "9309:541:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "10049:435:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "noteRegistries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10067:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "mapping(address => contract NoteRegistry)"
                            }
                          },
                          "id": 118,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2723,
                              "src": "10082:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10082:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10067:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 119,
                            "name": "NoteRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "10097:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "type(contract NoteRegistry)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10097:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "src": "10067:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320616c7265616479206861732061206c696e6b6564204e6f7465205265676973747279",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10114:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_386d9782a4417fe511293e542baf770580128f2fcbd1eddeff38dd1ac8808a5b",
                          "typeString": "literal_string \"address already has a linked Note Registry\""
                        },
                        "value": "address already has a linked Note Registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_386d9782a4417fe511293e542baf770580128f2fcbd1eddeff38dd1ac8808a5b",
                          "typeString": "literal_string \"address already has a linked Note Registry\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10059:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10059:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "10059:100:0"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "10169:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 126,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10169:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_canMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "10223:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_canBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "10245:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_canConvert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "10267:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_scalingFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "10292:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_linkedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "10320:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "10354:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          ],
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10346:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "10381:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10373:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10373:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10193:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_NoteRegistry_$1068_$",
                        "typeString": "function (bool,bool,bool,uint256,address,address,address) returns (contract NoteRegistry)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 128,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10197:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10193:203:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10169:227:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "noteRegistries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "10406:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                          "typeString": "mapping(address => contract NoteRegistry)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2723,
                          "src": "10421:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10406:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "10435:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      }
                    },
                    "src": "10406:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "10468:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      ],
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10460:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10460:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "10453:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "_canMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9893:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9893:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "_canBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9916:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9916:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "name": "_canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9939:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9939:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "name": "_scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9965:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_linkedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9997:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9997:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9883:140:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "10040:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10040:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10039:9:0"
            },
            "scope": 290,
            "src": "9856:628:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "10640:285:0",
              "statements": [
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "10650:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 166,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10650:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "noteRegistries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10674:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                        "typeString": "mapping(address => contract NoteRegistry)"
                      }
                    },
                    "id": 171,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "10689:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10689:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10674:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10650:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 174,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "10718:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10743:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 175,
                            "name": "NoteRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "10730:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "type(contract NoteRegistry)"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10730:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "src": "10718:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e64657220646f6573206e6f7420686176652061206c696e6b6564204e6f7465205265676973747279",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10747:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a456527970d703a49e6fe83bbb5955b03937b3edb6755e932641dc69da21fad",
                          "typeString": "literal_string \"sender does not have a linked Note Registry\""
                        },
                        "value": "sender does not have a linked Note Registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a456527970d703a49e6fe83bbb5955b03937b3edb6755e932641dc69da21fad",
                          "typeString": "literal_string \"sender does not have a linked Note Registry\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10710:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10710:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "10710:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "_proofOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "10839:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "_proofType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "10853:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_proofSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "10865:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "10811:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                              "typeString": "contract NoteRegistry"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateNoteRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 906,
                          "src": "10811:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint16_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,uint16,address) external returns (bool)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10811:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "757064617465206661696c656421",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10880:16:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd9141a25158aadbed94670604e34ad9334b6aba9494b4ddcf21ca9f8cefacc3",
                          "typeString": "literal_string \"update failed!\""
                        },
                        "value": "update failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd9141a25158aadbed94670604e34ad9334b6aba9494b4ddcf21ca9f8cefacc3",
                          "typeString": "literal_string \"update failed!\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10803:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "10803:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10914:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 165,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "10907:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10527:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10563:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10563:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10591:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10591:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10517:100:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10634:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10634:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10633:6:0"
            },
            "scope": 290,
            "src": "10490:435:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "11223:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "11241:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11241:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "11255:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11241:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e207365742074686520636f6d6d6f6e207265666572656e636520737472696e6721",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11262:53:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ef7a8da0cb9d7cb8126262fb9f5667a27e157dcb33514bf59c2ff8c3f5ec66",
                          "typeString": "literal_string \"only the owner can set the common reference string!\""
                        },
                        "value": "only the owner can set the common reference string!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ef7a8da0cb9d7cb8126262fb9f5667a27e157dcb33514bf59c2ff8c3f5ec66",
                          "typeString": "literal_string \"only the owner can set the common reference string!\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "11233:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11233:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "11233:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "11326:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                        "typeString": "bytes32[6] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "11350:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                        "typeString": "bytes32[6] memory"
                      }
                    },
                    "src": "11326:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_commonReferenceString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "11415:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      ],
                      "id": 214,
                      "name": "LogSetCommonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "11387:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_bytes32_$6_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[6] memory)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11387:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "11382:56:0"
                }
              ]
            },
            "documentation": "@dev Set the common reference string\n     If the trusted setup is re-run, we will need to be able to change the crs\n@param _commonReferenceString the new commonReferenceString",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "11174:40:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 196,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11174:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 198,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11182:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "11174:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11173:42:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11223:0:0"
            },
            "scope": 290,
            "src": "11140:305:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "11931:259:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "11949:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11949:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "11963:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11949:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e20736574207468652070726f6f66207479706521",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11970:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5109f4f289249bb09934c4c8e16e08f6cf83d9105c35ec60b43cfc3956644e57",
                          "typeString": "literal_string \"only the owner can set the proof type!\""
                        },
                        "value": "only the owner can set the proof type!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5109f4f289249bb09934c4c8e16e08f6cf83d9105c35ec60b43cfc3956644e57",
                          "typeString": "literal_string \"only the owner can set the proof type!\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "11941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11941:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "11941:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "12021:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                          "typeString": "mapping(uint16 => address)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12032:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12021:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "12046:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12021:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "12021:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "balancedProofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "12073:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                          "typeString": "mapping(uint16 => bool)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12088:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12073:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 245,
                      "name": "_isBalanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "12102:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12073:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "12073:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12140:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_validatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "12152:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "_isBalanced",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "12171:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 248,
                      "name": "LogSetProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "12128:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (uint16,address,bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12128:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "12123:60:0"
                }
              ]
            },
            "documentation": "@dev Adds or modifies a proofType into the Cryptography Engine.\n     This method links a given `_proofType` to a smart contract validator.\n@param _proofType the AZTEC proof type\n@param _validatorAddress the address of the smart contract validator\n@param _isBalanced does this proof satisfy a balancing relationship?",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11839:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11839:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11866:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11866:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "name": "_isBalanced",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11901:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11901:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11829:94:0"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11931:0:0"
            },
            "scope": 290,
            "src": "11812:378:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "12357:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "12374:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                        "typeString": "mapping(uint16 => address)"
                      }
                    },
                    "id": 264,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "12385:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12374:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 265,
                  "nodeType": "Return",
                  "src": "12367:29:0"
                }
              ]
            },
            "documentation": "@dev Returns the validator address for a given proof type",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "12308:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12307:19:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "12348:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12348:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12347:9:0"
            },
            "scope": 290,
            "src": "12279:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "12566:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "balancedProofs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "12583:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                        "typeString": "mapping(uint16 => bool)"
                      }
                    },
                    "id": 276,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 275,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "12598:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12583:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 273,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "12576:33:0"
                }
              ]
            },
            "documentation": "@dev Returns the validator address for a given proof type",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsProofBalanced",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "12520:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12520:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12519:19:0"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "12560:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12560:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12559:6:0"
            },
            "scope": 290,
            "src": "12492:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "12971:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 286,
                    "name": "commonReferenceString",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "12988:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "functionReturnParameters": 285,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "12981:28:0"
                }
              ]
            },
            "documentation": "@dev Returns the common reference string.\nwe use a custom getter for `commonReferenceString` - the default getter created by making the storage\nvariable public indexes individual elements of the array, and we want to return the whole array",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12928:2:0"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "12952:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 281,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "12952:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 283,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12960:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "12952:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12951:19:0"
            },
            "scope": 290,
            "src": "12895:121:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 291,
        "src": "367:12651:0"
      }
    ],
    "src": "0:13019:0"
  },
  "legacyAST": {
    "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/ACE/ACE.sol",
    "exportedSymbols": {
      "ACE": [
        290
      ]
    },
    "id": 291,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/ACE/NoteRegistry.sol",
        "file": "./NoteRegistry.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 291,
        "sourceUnit": 1069,
        "src": "33:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/arsalen/Desktop/draft/AZTECProtocol/aztec-demo-js/protocol/contracts/utils/NoteUtils.sol",
        "file": "../utils/NoteUtils.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 291,
        "sourceUnit": 2080,
        "src": "62:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1068
        ],
        "contractKind": "contract",
        "documentation": "@title The AZTEC Cryptography Engine\n@author AZTEC\n@dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\ndigital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.*",
        "fullyImplemented": true,
        "id": 290,
        "linearizedBaseContracts": [
          290
        ],
        "name": "ACE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "commonReferenceString",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "627:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$6_storage",
              "typeString": "bytes32[6]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 6,
              "length": {
                "argumentTypes": null,
                "hexValue": "36",
                "id": 5,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "635:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "6"
              },
              "nodeType": "ArrayTypeName",
              "src": "627:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                "typeString": "bytes32[6]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "768:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "768:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "validators",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "889:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
              "typeString": "mapping(uint16 => address)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "897:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "889:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                "typeString": "mapping(uint16 => address)"
              },
              "valueType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "907:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "name": "balancedProofs",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2250:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
              "typeString": "mapping(uint16 => bool)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "2258:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "2250:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                "typeString": "mapping(uint16 => bool)"
              },
              "valueType": {
                "id": 15,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2268:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "validatedProofs",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2301:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2309:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2301:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 19,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2320:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "name": "noteRegistries",
            "nodeType": "VariableDeclaration",
            "scope": 290,
            "src": "2356:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
              "typeString": "mapping(address => contract NoteRegistry)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2364:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2356:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                "typeString": "mapping(address => contract NoteRegistry)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "NoteRegistry",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1068,
                "src": "2375:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                  "typeString": "contract NoteRegistry"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 33,
            "name": "LogSetProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2435:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2454:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "_isBalanced",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2481:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2434:64:0"
            },
            "src": "2417:82:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 39,
            "name": "LogSetCommonReferenceString",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "2538:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 36,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2546:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2538:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2537:35:0"
            },
            "src": "2504:69:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "2672:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2682:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "2690:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2690:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2682:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:18:0"
                }
              ]
            },
            "documentation": "@dev contract constructor. Sets the owner of ACE.*",
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2662:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2672:0:0"
            },
            "scope": 290,
            "src": "2651:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "3759:3227:0",
              "statements": [
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "name": "validatorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "3852:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3852:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 61,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "3879:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                        "typeString": "mapping(uint16 => address)"
                      }
                    },
                    "id": 63,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 62,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3890:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3879:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3852:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "3919:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3947:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3939:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3939:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3919:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563742076616c696461746f72206164647265737320746f206578697374",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_928065b89917517c3f89f3bc0851c1dbb520965cb3a058be0b3b142afbc3553c",
                          "typeString": "literal_string \"expect validator address to exist\""
                        },
                        "value": "expect validator address to exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_928065b89917517c3f89f3bc0851c1dbb520965cb3a058be0b3b142afbc3553c",
                          "typeString": "literal_string \"expect validator address to exist\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "3911:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:76:0"
                },
                {
                  "externalReferences": [
                    {
                      "_proofType": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "6641:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4831:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4412:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 52,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "4359:7:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofType": {
                        "declaration": 50,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5695:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "balancedProofs_slot": {
                        "declaration": 17,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "5720:19:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 60,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "5089:16:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4495:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4747:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4579:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 7,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "4663:26:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "6778:20:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 74,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    let _proofData := add(0x04, calldataload(0x44))\n    mstore(add(memPtr, 0x04), 0x100)\n    mstore(add(memPtr, 0x24), _sender)\n    mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n    mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n    mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n    calldatacopy(add(memPtr, 0x104), _proofData, add(calldataload(_proofData), 0x20))\n    if iszero(staticcall(gas(), validatorAddress, memPtr, add(calldataload(_proofData), 0x124), 0x00, 0x00))\n    {\n        mstore(0x00, 400)\n        revert(0x00, 0x20)\n    }\n    returndatacopy(memPtr, 0x00, returndatasize())\n    let returnStart := memPtr\n    let proofOutputs := add(memPtr, mload(memPtr))\n    memPtr := add(add(memPtr, 0x20), returndatasize())\n    mstore(0x00, _proofType)\n    mstore(0x20, balancedProofs_slot)\n    switch sload(keccak256(0x00, 0x40))\n    case 1 {\n        let numProofOutputs := mload(add(proofOutputs, 0x20))\n        for {\n            let i := 0\n        }\n        lt(i, numProofOutputs)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let loc := add(proofOutputs, mload(add(add(proofOutputs, 0x40), mul(i, 0x20))))\n            let proofHash := keccak256(loc, add(mload(loc), 0x20))\n            mstore(memPtr, proofHash)\n            mstore(add(memPtr, 0x20), _proofType)\n            mstore(add(memPtr, 0x40), caller())\n            mstore(0x00, keccak256(memPtr, 0x60))\n            mstore(0x20, validatedProofs_slot)\n            sstore(keccak256(0x00, 0x40), 0x01)\n        }\n    }\n    return(returnStart, returndatasize())\n}",
                  "src": "3997:2989:0"
                }
              ]
            },
            "documentation": "@dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n      linked to `_proofType`. The validator smart contract will have the following interface:\n      ```\n          function validate(\n              bytes _proofData,\n              address _sender,\n              bytes32[6] _commonReferenceString\n          ) public returns (bytes)\n      ```\n@param _proofType the AZTEC proof type\n@param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n  an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard",
            "id": 76,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3640:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3667:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3667:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3692:14:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3692:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3630:82:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "3740:12:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3730:28:0"
            },
            "scope": 290,
            "src": "3608:3378:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "7918:811:0",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "_proofType": {
                        "declaration": 78,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8128:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "8211:20:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 84,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    let proofHashes := add(0x04, calldataload(0x24))\n    let length := calldataload(proofHashes)\n    mstore(add(memPtr, 0x20), _proofType)\n    mstore(add(memPtr, 0x40), caller())\n    mstore(0x20, validatedProofs_slot)\n    for {\n        let i := 0\n    }\n    lt(i, length)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let proofHash := calldataload(add(add(proofHashes, mul(i, 0x20)), 0x20))\n        switch iszero(proofHash)\n        case 1 {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(memPtr, proofHash)\n        mstore(0x00, keccak256(memPtr, 0x60))\n        sstore(keccak256(0x00, 0x40), 0x00)\n    }\n}",
                  "src": "7928:801:0"
                }
              ]
            },
            "documentation": "@dev Clear storage variables set when validating zero-knowledge proofs.\n     The only address that can clear data from `validatedProofs` is the address that created the proof.\n     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n     are only required for the duration of a single transaction.\n     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n     two confidential assets.\n     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n@param _proofType the AZTEC proof type\nUnnamed param is a dynamic array of proof hashes",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearProofByHashes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "7870:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7870:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "7889:18:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7889:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 80,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7889:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7869:39:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7918:0:0"
            },
            "scope": 290,
            "src": "7842:887:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "9453:397:0",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "validatedProofs_slot": {
                        "declaration": 21,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "9723:20:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofHash": {
                        "declaration": 90,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9539:10:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 92,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9639:7:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofType": {
                        "declaration": 88,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9589:10:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 97,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(0x40)\n    mstore(memPtr, _proofHash)\n    mstore(add(memPtr, 0x20), _proofType)\n    mstore(add(memPtr, 0x40), _sender)\n    mstore(0x00, keccak256(memPtr, 0x60))\n    mstore(0x20, validatedProofs_slot)\n    mstore(memPtr, sload(keccak256(0x00, 0x40)))\n    return(memPtr, 0x20)\n}",
                  "src": "9463:387:0"
                }
              ]
            },
            "documentation": "@dev Validate a previously validated AZTEC proof via its hash\n     This enables confidential assets to receive transfer instructions from a Dapp that\n     has already validated an AZTEC proof that satisfies a balancing relationship.\n@param _proofType the AZTEC proof type\n@param _proofHash the hash of the `proofOutput` received by the asset\n@param _sender the Ethereum address of the contract issuing the transfer instruction\n@return a boolean that signifies whether the corresponding AZTEC proof has been validated",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProofByHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9347:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9347:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "name": "_proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9374:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9402:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9402:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9337:86:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "9447:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9447:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9446:6:0"
            },
            "scope": 290,
            "src": "9309:541:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "10049:435:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 115,
                            "name": "noteRegistries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10067:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "mapping(address => contract NoteRegistry)"
                            }
                          },
                          "id": 118,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2723,
                              "src": "10082:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10082:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10067:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10110:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 119,
                            "name": "NoteRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "10097:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "type(contract NoteRegistry)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10097:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "src": "10067:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320616c7265616479206861732061206c696e6b6564204e6f7465205265676973747279",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10114:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_386d9782a4417fe511293e542baf770580128f2fcbd1eddeff38dd1ac8808a5b",
                          "typeString": "literal_string \"address already has a linked Note Registry\""
                        },
                        "value": "address already has a linked Note Registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_386d9782a4417fe511293e542baf770580128f2fcbd1eddeff38dd1ac8808a5b",
                          "typeString": "literal_string \"address already has a linked Note Registry\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10059:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10059:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "10059:100:0"
                },
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "10169:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 126,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10169:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_canMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "10223:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "_canBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "10245:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "_canConvert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "10267:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_scalingFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "10292:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_linkedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "10320:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "10354:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          ],
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10346:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2749,
                            "src": "10381:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ACE_$290",
                              "typeString": "contract ACE"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10373:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10373:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10193:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_NoteRegistry_$1068_$",
                        "typeString": "function (bool,bool,bool,uint256,address,address,address) returns (contract NoteRegistry)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 128,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10197:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10193:203:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10169:227:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "noteRegistries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "10406:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                          "typeString": "mapping(address => contract NoteRegistry)"
                        }
                      },
                      "id": 146,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2723,
                          "src": "10421:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10421:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10406:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "10435:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      }
                    },
                    "src": "10406:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "10406:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "10468:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      ],
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10460:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10460:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "10453:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "name": "_canMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9893:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9893:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "_canBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9916:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9916:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "name": "_canConvert",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9939:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9939:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "name": "_scalingFactor",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9965:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "_linkedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "9997:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9997:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9883:140:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "10040:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10040:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10039:9:0"
            },
            "scope": 290,
            "src": "9856:628:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "10640:285:0",
              "statements": [
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "10650:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                        "typeString": "contract NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 166,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1068,
                        "src": "10650:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "noteRegistries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10674:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_NoteRegistry_$1068_$",
                        "typeString": "mapping(address => contract NoteRegistry)"
                      }
                    },
                    "id": 171,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "10689:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10689:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10674:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                      "typeString": "contract NoteRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10650:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                          "typeString": "contract NoteRegistry"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 174,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "10718:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10743:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 175,
                            "name": "NoteRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "10730:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NoteRegistry_$1068_$",
                              "typeString": "type(contract NoteRegistry)"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10730:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                            "typeString": "contract NoteRegistry"
                          }
                        },
                        "src": "10718:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e64657220646f6573206e6f7420686176652061206c696e6b6564204e6f7465205265676973747279",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10747:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a456527970d703a49e6fe83bbb5955b03937b3edb6755e932641dc69da21fad",
                          "typeString": "literal_string \"sender does not have a linked Note Registry\""
                        },
                        "value": "sender does not have a linked Note Registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a456527970d703a49e6fe83bbb5955b03937b3edb6755e932641dc69da21fad",
                          "typeString": "literal_string \"sender does not have a linked Note Registry\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10710:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10710:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "10710:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "_proofOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "10839:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "_proofType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "10853:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "_proofSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "10865:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "10811:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NoteRegistry_$1068",
                              "typeString": "contract NoteRegistry"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateNoteRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 906,
                          "src": "10811:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint16_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,uint16,address) external returns (bool)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10811:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "757064617465206661696c656421",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10880:16:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd9141a25158aadbed94670604e34ad9334b6aba9494b4ddcf21ca9f8cefacc3",
                          "typeString": "literal_string \"update failed!\""
                        },
                        "value": "update failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd9141a25158aadbed94670604e34ad9334b6aba9494b4ddcf21ca9f8cefacc3",
                          "typeString": "literal_string \"update failed!\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "10803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10803:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "10803:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10914:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 165,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "10907:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateNoteRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "_proofOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10527:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10563:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10563:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10591:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10591:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10517:100:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "10634:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10634:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10633:6:0"
            },
            "scope": 290,
            "src": "10490:435:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "11223:222:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "11241:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11241:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "11255:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11241:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e207365742074686520636f6d6d6f6e207265666572656e636520737472696e6721",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11262:53:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9ef7a8da0cb9d7cb8126262fb9f5667a27e157dcb33514bf59c2ff8c3f5ec66",
                          "typeString": "literal_string \"only the owner can set the common reference string!\""
                        },
                        "value": "only the owner can set the common reference string!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9ef7a8da0cb9d7cb8126262fb9f5667a27e157dcb33514bf59c2ff8c3f5ec66",
                          "typeString": "literal_string \"only the owner can set the common reference string!\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "11233:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11233:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "11233:83:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 210,
                      "name": "commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "11326:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                        "typeString": "bytes32[6] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 211,
                      "name": "_commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "11350:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                        "typeString": "bytes32[6] memory"
                      }
                    },
                    "src": "11326:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_commonReferenceString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "11415:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      ],
                      "id": 214,
                      "name": "LogSetCommonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "11387:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_bytes32_$6_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[6] memory)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11387:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "11382:56:0"
                }
              ]
            },
            "documentation": "@dev Set the common reference string\n     If the trusted setup is re-run, we will need to be able to change the crs\n@param _commonReferenceString the new commonReferenceString",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "11174:40:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 196,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11174:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 198,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11182:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "11174:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11173:42:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11223:0:0"
            },
            "scope": 290,
            "src": "11140:305:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "11931:259:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2723,
                            "src": "11949:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11949:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 231,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "11963:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11949:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e20736574207468652070726f6f66207479706521",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11970:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5109f4f289249bb09934c4c8e16e08f6cf83d9105c35ec60b43cfc3956644e57",
                          "typeString": "literal_string \"only the owner can set the proof type!\""
                        },
                        "value": "only the owner can set the proof type!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5109f4f289249bb09934c4c8e16e08f6cf83d9105c35ec60b43cfc3956644e57",
                          "typeString": "literal_string \"only the owner can set the proof type!\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2726,
                        2727
                      ],
                      "referencedDeclaration": 2727,
                      "src": "11941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11941:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "11941:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "12021:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                          "typeString": "mapping(uint16 => address)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12032:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12021:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "_validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "12046:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12021:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "12021:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "balancedProofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "12073:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                          "typeString": "mapping(uint16 => bool)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12088:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12073:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 245,
                      "name": "_isBalanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "12102:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12073:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "12073:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "_proofType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "12140:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_validatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "12152:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "_isBalanced",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "12171:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 248,
                      "name": "LogSetProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "12128:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (uint16,address,bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12128:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "12123:60:0"
                }
              ]
            },
            "documentation": "@dev Adds or modifies a proofType into the Cryptography Engine.\n     This method links a given `_proofType` to a smart contract validator.\n@param _proofType the AZTEC proof type\n@param _validatorAddress the address of the smart contract validator\n@param _isBalanced does this proof satisfy a balancing relationship?",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11839:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11839:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 223,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11866:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11866:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "name": "_isBalanced",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "11901:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11901:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11829:94:0"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11931:0:0"
            },
            "scope": 290,
            "src": "11812:378:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "12357:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "12374:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
                        "typeString": "mapping(uint16 => address)"
                      }
                    },
                    "id": 264,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "12385:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12374:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 261,
                  "id": 265,
                  "nodeType": "Return",
                  "src": "12367:29:0"
                }
              ]
            },
            "documentation": "@dev Returns the validator address for a given proof type",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "12308:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12308:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12307:19:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 267,
                  "src": "12348:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12348:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12347:9:0"
            },
            "scope": 290,
            "src": "12279:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "12566:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 274,
                      "name": "balancedProofs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "12583:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_bool_$",
                        "typeString": "mapping(uint16 => bool)"
                      }
                    },
                    "id": 276,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 275,
                      "name": "_proofType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "12598:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12583:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 273,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "12576:33:0"
                }
              ]
            },
            "documentation": "@dev Returns the validator address for a given proof type",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsProofBalanced",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "name": "_proofType",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "12520:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12520:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12519:19:0"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "12560:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12560:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12559:6:0"
            },
            "scope": 290,
            "src": "12492:124:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "12971:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 286,
                    "name": "commonReferenceString",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "12988:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "functionReturnParameters": 285,
                  "id": 287,
                  "nodeType": "Return",
                  "src": "12981:28:0"
                }
              ]
            },
            "documentation": "@dev Returns the common reference string.\nwe use a custom getter for `commonReferenceString` - the default getter created by making the storage\nvariable public indexes individual elements of the array, and we want to return the whole array",
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12928:2:0"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "12952:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 281,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "12952:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 283,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12960:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "12952:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12951:19:0"
            },
            "scope": 290,
            "src": "12895:121:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 291,
        "src": "367:12651:0"
      }
    ],
    "src": "0:13019:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "1551589700085": {
      "events": {
        "0xd40cf1ca4d423849d345777d40c93297652998c20de84f223942bbf2cbcba75b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_proofType",
              "type": "uint16"
            },
            {
              "indexed": false,
              "name": "_validatorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_isBalanced",
              "type": "bool"
            }
          ],
          "name": "LogSetProof",
          "type": "event",
          "signature": "0xd40cf1ca4d423849d345777d40c93297652998c20de84f223942bbf2cbcba75b"
        },
        "0x7c0947ed607ee0a9cb1d0e2afd6f75d59aa00a3c05d0103a2f79b6bf1b5e6e55": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_commonReferenceString",
              "type": "bytes32[6]"
            }
          ],
          "name": "LogSetCommonReferenceString",
          "type": "event",
          "signature": "0x7c0947ed607ee0a9cb1d0e2afd6f75d59aa00a3c05d0103a2f79b6bf1b5e6e55"
        }
      },
      "links": {},
      "address": "0xfF032cCb83B8e52C1D6AF0f569f200173dB21eCF",
      "transactionHash": "0x224546f1f4eaa4101678d85e32c8dd42b1a11e9762b62944469cc37285515036"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-03T05:16:21.025Z",
  "devdoc": {
    "author": "AZTEC",
    "details": "ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.*",
    "methods": {
      "clearProofByHashes(uint16,bytes32[])": {
        "details": "Clear storage variables set when validating zero-knowledge proofs.     The only address that can clear data from `validatedProofs` is the address that created the proof.     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`     are only required for the duration of a single transaction.     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to     two confidential assets.     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`",
        "params": {
          "_proofType": "the AZTEC proof type Unnamed param is a dynamic array of proof hashes"
        }
      },
      "constructor": {
        "details": "contract constructor. Sets the owner of ACE.*"
      },
      "getCommonReferenceString()": {
        "details": "Returns the common reference string. we use a custom getter for `commonReferenceString` - the default getter created by making the storage variable public indexes individual elements of the array, and we want to return the whole array"
      },
      "getIsProofBalanced(uint16)": {
        "details": "Returns the validator address for a given proof type"
      },
      "getValidatorAddress(uint16)": {
        "details": "Returns the validator address for a given proof type"
      },
      "setCommonReferenceString(bytes32[6])": {
        "details": "Set the common reference string     If the trusted setup is re-run, we will need to be able to change the crs",
        "params": {
          "_commonReferenceString": "the new commonReferenceString"
        }
      },
      "setProof(uint16,address,bool)": {
        "details": "Adds or modifies a proofType into the Cryptography Engine.     This method links a given `_proofType` to a smart contract validator.",
        "params": {
          "_isBalanced": "does this proof satisfy a balancing relationship?",
          "_proofType": "the AZTEC proof type",
          "_validatorAddress": "the address of the smart contract validator"
        }
      },
      "validateProof(uint16,address,bytes)": {
        "details": "Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract      linked to `_proofType`. The validator smart contract will have the following interface:      ```          function validate(              bytes _proofData,              address _sender,              bytes32[6] _commonReferenceString          ) public returns (bytes)      ```",
        "params": {
          "_proofType": "the AZTEC proof type",
          "_sender": "the Ethereum address of the original transaction sender. It is explicitly assumed that  an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data"
        },
        "return": "a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard"
      },
      "validateProofByHash(uint16,bytes32,address)": {
        "details": "Validate a previously validated AZTEC proof via its hash     This enables confidential assets to receive transfer instructions from a Dapp that     has already validated an AZTEC proof that satisfies a balancing relationship.",
        "params": {
          "_proofHash": "the hash of the `proofOutput` received by the asset",
          "_proofType": "the AZTEC proof type",
          "_sender": "the Ethereum address of the contract issuing the transfer instruction"
        },
        "return": "a boolean that signifies whether the corresponding AZTEC proof has been validated"
      }
    },
    "title": "The AZTEC Cryptography Engine"
  },
  "userdoc": {
    "methods": {}
  }
}